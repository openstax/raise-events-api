version: 0.2

env:
  shell: bash
  secrets-manager:
    SLACK_WEBHOOKURL: "slack:k12stream"
    AUTH_KEYS: "raise-eventsapi-auth-staging:20221026"
    KAFKA_SASL_USERNAME: "AmazonMSK_eventsapi-staging:username"
    KAFKA_SASL_PASSWORD: "AmazonMSK_eventsapi-staging:password"

phases:
  install:
    commands:
      - curl -L https://get.helm.sh/helm-v3.13.0-linux-amd64.tar.gz | tar -xvz
      - mv linux-amd64/helm ./helm
      - curl -L -o yq "https://github.com/mikefarah/yq/releases/download/v4.35.2/yq_linux_amd64"
      - chmod +x ./helm ./yq
      - export PATH=$PWD:$PATH
  pre_build:
    commands:
      - aws eks update-kubeconfig --name $K8S_CLUSTER_NAME
      - export API_IMAGE_NAME=$(cat $CODEBUILD_SRC_DIR_api_build_output/api-image-name.txt)
      - export API_IMAGE_TAG=$(cat $CODEBUILD_SRC_DIR_api_build_output/api-image-tag.txt)
      - export API_INSTANCE="events.staging.raiselearning.org"
      - touch ./values.yaml
      - yq e -i '.deploymentName="staging"' ./values.yaml
      - yq e -i '.deploymentDomain=strenv(API_INSTANCE)' ./values.yaml
      - yq e -i '.replicas=2' ./values.yaml
      - yq e -i '.allowedOrigins="https://staging.raiselearning.org"' ./values.yaml
      - yq e -i '.authKeys=strenv(AUTH_KEYS)' ./values.yaml
      - yq e -i '.glueRegistryName=strenv(GLUE_REGISTRY_NAME)' ./values.yaml
      - yq e -i '.glueAwsRegion=strenv(GLUE_AWS_REGION)' ./values.yaml
      - yq e -i '.kafkaBootstrapBrokers=strenv(KAFKA_BOOTSTRAP_BROKERS)' ./values.yaml
      - yq e -i '.kafkaSaslUsername=strenv(KAFKA_SASL_USERNAME)' ./values.yaml
      - yq e -i '.kafkaSaslPassword=strenv(KAFKA_SASL_PASSWORD)' ./values.yaml
      - yq e -i '.apiImage.name=strenv(API_IMAGE_NAME)' ./values.yaml
      - yq e -i '.apiImage.tag=strenv(API_IMAGE_TAG)' ./values.yaml
  build:
    commands:
      - helm upgrade --install -f ./values.yaml $API_INSTANCE deploy/chart/
      - export SLACK_MESSAGE="Deployment to $API_INSTANCE completed successfully for commit $COMMIT_ID"
      - "curl -X POST -H 'Content-type: application/json' --data '{\"text\":\"'\"$SLACK_MESSAGE\"'\"}' $SLACK_WEBHOOKURL"
